
# Create a new directory and enter it
function mkd() {
	mkdir -p "$@" && cd "$_";
}

# Determine size of a file or total size of a directory
function fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* *;
	fi;
}

# `s` with no arguments opens the current directory in Sublime Text, otherwise
# opens the given location
function s() {
	if [ $# -eq 0 ]; then
		subl .;
	else
		subl "$@";
	fi;
}

# `o` with no arguments opens the current directory, otherwise opens the given
# location
function o() {
	if [ $# -eq 0 ]; then
		open .;
	else
		open "$@";
	fi;
}

# automatically set proper node version if .nvmrc exists
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}

# git tag version bump

function gvb() { git tag -a $1 -m 'Version bump to $1' && git push origin $1 }

function gretag() { git tag -d $1 && git push origin :refs/tags/$1 && git tag $1; }


# cd shortcuts with autocomplete

pro() { cd ~/Projects/$1; }
compctl -W ~/Projects/ -/ pro

wrk() { cd ~/Work/$1; }
compctl -W ~/Work/ -/ wrk

bc_path=~/Work/BC/

bct() { cd ${bc_path}/Themes/$1; }
compctl -W ${bc_path}/Themes/ -/ bct

bcm() { cd ${bc_path}/Modules/$1; }
compctl -W ${bc_path}/Modules/ -/ bcm
